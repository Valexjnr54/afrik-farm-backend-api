
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.0
 * Query Engine version: c0aafc03b8ef6cdced8654b9a817999e02457d6a
 */
Prisma.prismaVersion = {
  client: "6.17.0",
  engine: "c0aafc03b8ef6cdced8654b9a817999e02457d6a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  fullname: 'fullname',
  email: 'email',
  role: 'role',
  profile_image: 'profile_image',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  fullname: 'fullname',
  username: 'username',
  email: 'email',
  phone_number: 'phone_number',
  role: 'role',
  countryId: 'countryId',
  stateId: 'stateId',
  lgaId: 'lgaId',
  profile_image: 'profile_image',
  verification_code: 'verification_code',
  email_verified: 'email_verified',
  status: 'status',
  password: 'password',
  temporal_password: 'temporal_password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CountryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  iso2: 'iso2',
  iso3: 'iso3',
  numericCode: 'numericCode',
  phoneCode: 'phoneCode',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code',
  countryId: 'countryId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LgaScalarFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code',
  stateId: 'stateId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.AdminOrderByRelevanceFieldEnum = {
  fullname: 'fullname',
  email: 'email',
  profile_image: 'profile_image',
  password: 'password'
};

exports.Prisma.UsersOrderByRelevanceFieldEnum = {
  fullname: 'fullname',
  username: 'username',
  email: 'email',
  phone_number: 'phone_number',
  profile_image: 'profile_image',
  verification_code: 'verification_code',
  password: 'password'
};

exports.Prisma.CountryOrderByRelevanceFieldEnum = {
  name: 'name',
  iso2: 'iso2',
  iso3: 'iso3',
  numericCode: 'numericCode',
  phoneCode: 'phoneCode'
};

exports.Prisma.StateOrderByRelevanceFieldEnum = {
  name: 'name',
  code: 'code'
};

exports.Prisma.LgaOrderByRelevanceFieldEnum = {
  name: 'name',
  code: 'code'
};
exports.Role = exports.$Enums.Role = {
  lga_admin: 'lga_admin',
  country_admin: 'country_admin',
  state_admin: 'state_admin',
  investor: 'investor',
  super_admin: 'super_admin'
};

exports.Status = exports.$Enums.Status = {
  Available: 'Available',
  Pending: 'Pending',
  Completed: 'Completed',
  Rejected: 'Rejected',
  Approved: 'Approved',
  Inactive: 'Inactive',
  Active: 'Active',
  Suspend: 'Suspend'
};

exports.Prisma.ModelName = {
  Admin: 'Admin',
  Users: 'Users',
  Country: 'Country',
  State: 'State',
  Lga: 'Lga'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/user/Desktop/Afrik Farm/src/models",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/user/Desktop/Afrik Farm/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.17.0",
  "engineVersion": "c0aafc03b8ef6cdced8654b9a817999e02457d6a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/models\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Admin {\n  id            Int      @id @default(autoincrement())\n  fullname      String\n  email         String   @unique\n  role          Role     @default(super_admin)\n  profile_image String?\n  password      String\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  @@map(\"admin\")\n}\n\nmodel Users {\n  id                Int      @id @default(autoincrement())\n  fullname          String\n  username          String   @unique\n  email             String   @unique\n  phone_number      String   @unique\n  role              Role\n  country           Country? @relation(fields: [countryId], references: [id])\n  countryId         Int?\n  state             State?   @relation(fields: [stateId], references: [id])\n  stateId           Int?\n  lga               Lga?     @relation(fields: [lgaId], references: [id])\n  lgaId             Int?\n  profile_image     String?\n  verification_code String?\n  email_verified    Boolean  @default(false)\n  status            Status   @default(Inactive)\n  password          String\n  temporal_password Boolean  @default(true)\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n\n  @@map(\"users\")\n}\n\nmodel Country {\n  id          Int      @id @default(autoincrement())\n  name        String\n  iso2        String?  @unique // e.g. US, NG\n  iso3        String?  @unique // e.g. USA, NGA\n  numericCode String?  @unique\n  phoneCode   String? // e.g. +1, +234\n  states      State[]  @relation(\"CountryStates\")\n  users       Users[]\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  @@map(\"countries\")\n}\n\nmodel State {\n  id        Int      @id @default(autoincrement())\n  name      String\n  code      String? // region/state code (optional)\n  country   Country  @relation(fields: [countryId], references: [id], name: \"CountryStates\")\n  countryId Int\n  lgas      Lga[]    @relation(\"StateLgas\")\n  users     Users[]\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([name, countryId]) // state name unique within a country\n  @@map(\"states\")\n}\n\nmodel Lga {\n  id        Int      @id @default(autoincrement())\n  name      String\n  code      String? // optional administrative code\n  state     State    @relation(fields: [stateId], references: [id], name: \"StateLgas\")\n  stateId   Int\n  users     Users[]\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([name, stateId]) // LGA name unique within a state\n  @@map(\"lgas\")\n}\n\nenum Role {\n  lga_admin\n  country_admin\n  state_admin\n  investor\n  super_admin\n}\n\nenum Status {\n  Available\n  Pending\n  Completed\n  Rejected\n  Approved\n  Inactive\n  Active\n  Suspend\n}\n",
  "inlineSchemaHash": "6b8bdfe3bf61bc2ccd5c1e4577edf52e363f5178e324f72b8b3c7a1b6fc5d024",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Admin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fullname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"profile_image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"admin\"},\"Users\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fullname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"country\",\"kind\":\"object\",\"type\":\"Country\",\"relationName\":\"CountryToUsers\"},{\"name\":\"countryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"state\",\"kind\":\"object\",\"type\":\"State\",\"relationName\":\"StateToUsers\"},{\"name\":\"stateId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lga\",\"kind\":\"object\",\"type\":\"Lga\",\"relationName\":\"LgaToUsers\"},{\"name\":\"lgaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profile_image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"verification_code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email_verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"Status\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"temporal_password\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"users\"},\"Country\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iso2\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"iso3\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"numericCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"states\",\"kind\":\"object\",\"type\":\"State\",\"relationName\":\"CountryStates\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"Users\",\"relationName\":\"CountryToUsers\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"countries\"},\"State\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"object\",\"type\":\"Country\",\"relationName\":\"CountryStates\"},{\"name\":\"countryId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lgas\",\"kind\":\"object\",\"type\":\"Lga\",\"relationName\":\"StateLgas\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"Users\",\"relationName\":\"StateToUsers\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"states\"},\"Lga\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"object\",\"type\":\"State\",\"relationName\":\"StateLgas\"},{\"name\":\"stateId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"Users\",\"relationName\":\"LgaToUsers\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"lgas\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

